/*
Generated by scripts/generate_alphabet.py

This h file contains generated representations for characters to be dispalyed on the light wand as arrays of 32-bit integers
Each 32-bit integer in an array is a column of the characer, and each bit in that integer is a pixel. 1's mean on, 0's mean off.

The lowest pixel on the wand is the LSB

*/

#include <stdint.h>

#define CHAR_WIDTH      11
#define CHAR_HEIGHT     15

const uint32_t CHAR_A[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x0000400f,0x00004007,0x00007e73,0x00007e73,0x00007e73,0x00004007,0x0000400f,0x00007fff,0x00007fff};
const uint32_t CHAR_B[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00004e73,0x00004e73,0x00004e07,0x00006007,0x000071ff,0x00007fff,0x00007fff};
const uint32_t CHAR_C[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x0000700f,0x00006007,0x00004ff3,0x00004ff3,0x00004ff3,0x000063c7,0x000073cf,0x00007fff,0x00007fff};
const uint32_t CHAR_D[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00004ff3,0x00004ff3,0x00004ff3,0x00006007,0x0000700f,0x00007fff,0x00007fff};
const uint32_t CHAR_E[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00004e73,0x00004e73,0x00004e73,0x00004ff3,0x00004ff3,0x00007fff,0x00007fff};
const uint32_t CHAR_F[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00007e73,0x00007e73,0x00007e73,0x00007ff3,0x00007ff3,0x00007fff,0x00007fff};
const uint32_t CHAR_G[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x0000700f,0x00006007,0x00004ff3,0x00004ff3,0x000049f3,0x000061c7,0x000061cf,0x00007fff,0x00007fff};
const uint32_t CHAR_H[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00007e7f,0x00007e7f,0x00007e7f,0x00004003,0x00004003,0x00007fff,0x00007fff};
const uint32_t CHAR_I[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00007fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff};
const uint32_t CHAR_J[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x000073ff,0x000063ff,0x00004fff,0x00004fff,0x00004fff,0x00006003,0x00007003,0x00007fff,0x00007fff};
const uint32_t CHAR_K[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00007e3f,0x0000780f,0x000063c3,0x000047fb,0x00005fff,0x00007fff,0x00007fff};
const uint32_t CHAR_L[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00004fff,0x00004fff,0x00004fff,0x00004fff,0x00004fff,0x00007fff,0x00007fff};
const uint32_t CHAR_M[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00007f0f,0x00007e1f,0x00007f0f,0x00004003,0x00004003,0x00007fff,0x00007fff};
const uint32_t CHAR_N[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00007f0f,0x00007c3f,0x000070ff,0x00004003,0x00004003,0x00007fff,0x00007fff};
const uint32_t CHAR_O[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x0000700f,0x00006007,0x00004ff3,0x00004ff3,0x00004ff3,0x00006007,0x0000700f,0x00007fff,0x00007fff};
const uint32_t CHAR_P[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00007e73,0x00007e73,0x00007e73,0x00007f07,0x00007f8f,0x00007fff,0x00007fff};
const uint32_t CHAR_Q[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x0000700f,0x00006007,0x00004ff3,0x00004ff3,0x00004ff3,0x00004007,0x0000400f,0x00007fff,0x00007fff};
const uint32_t CHAR_R[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00004003,0x00004003,0x00007e73,0x00007c73,0x00007073,0x00004307,0x00005f8f,0x00007fff,0x00007fff};
const uint32_t CHAR_S[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x0000738f,0x00006307,0x00004e73,0x00004e73,0x00004e73,0x000060c7,0x000071cf,0x00007fff,0x00007fff};
const uint32_t CHAR_T[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00007ff3,0x00007ff3,0x00007ff3,0x00004003,0x00007ff3,0x00007ff3,0x00007ff3,0x00007fff,0x00007fff};
const uint32_t CHAR_U[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00007003,0x00006003,0x00004fff,0x00004fff,0x00004fff,0x00006003,0x00007003,0x00007fff,0x00007fff};
const uint32_t CHAR_V[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00007ff3,0x00007e03,0x0000601f,0x000041ff,0x0000403f,0x00007e03,0x00007ff3,0x00007fff,0x00007fff};
const uint32_t CHAR_W[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00007ff3,0x00007e03,0x0000601f,0x000041ff,0x0000403f,0x00007e03,0x00007f03,0x0000700f,0x000041ff};
const uint32_t CHAR_X[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00005ffb,0x000047e3,0x0000700f,0x0000781f,0x0000700f,0x000047e3,0x00005ffb,0x00007fff,0x00007fff};
const uint32_t CHAR_Y[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00007ffb,0x00007fe3,0x00007f0f,0x0000401f,0x00007f0f,0x00007fe3,0x00007ffb,0x00007fff,0x00007fff};
const uint32_t CHAR_Z[CHAR_WIDTH]       = {0x00007fff,0x00007fff,0x00005ff3,0x000047f3,0x000040f3,0x00004c33,0x00004f03,0x00004fe3,0x00004ffb,0x00007fff,0x00007fff};
const uint32_t CHAR_BANG[CHAR_WIDTH]    = {0x00007fff,0x00007fff,0x00004403,0x00004403,0x00006fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff};
const uint32_t CHAR_QUESTION[CHAR_WIDTH]        = {0x00007fff,0x00007fff,0x00007fcf,0x00007fc7,0x00006ff3,0x00004473,0x00006e73,0x00007f07,0x00007f8f,0x00007fff,0x00007fff};
const uint32_t CHAR_PERIOD[CHAR_WIDTH]  = {0x00007fff,0x00007fff,0x000047ff,0x000047ff,0x00006fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff};
const uint32_t CHAR_COMMA[CHAR_WIDTH]   = {0x00007fff,0x00007fff,0x000071ff,0x000071ff,0x000043ff,0x00007fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff,0x00007fff};
